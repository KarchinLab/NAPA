#=========================================================#
# Example NAPA configuration file
# (Alignment based network)
#=========================================================#
# Input and output dirs will be relative to working_dir
# All input files will be in the input_dir
# All output files will be in the output_dir
working_dir: ./
data_dir: data/
results_dir: results/

#=========================================================#
# REQUIRED, for both construction and analysis
#=========================================================#
# Network type: directed vs. undirected
edge_type: undir
net_type: aln
net_file_base: TEM-ext-spec
# If left blank, name will be built from 
# other options, using net_file_base and dirs
net_file: 

#=========================================================#
# Network Construction - Aln and Phylo Based Networks
#=========================================================#
# REQ: options for network construction
method: mod_jaccard
thresh: 0.005
# By default the minimum co-occurrence count is 1(sequence)
min_co_occur: 1
output_edge_weight_table: yes
#---------------------------------------------------------#
wild_type: TEM_1
# REQ: Original protein multiple seq. alignment
aln_fasta_file: TEM-SHV-prot-aln.fasta
# Whether or not to print the list of mutations 
# in each sequence in the alignment to file
print_seq_muts: yes
#---------------------------------------------------------#
# OPT: Custom numbering of protein/alignment positions
pos_list_file: TEM-pos-list.txt
# OPT: Selecting a subset of posion/ranges in protein
pos_subset_file: TEM-pos-subset.txt
# OPT: Rather then enumerating positions, specify
# ranges of positions (uncomment to do that)
#protein_ranges:
#- 23-296
#---------------------------------------------------------#
# OPT: Selecting a subset of sequences by func. annot
prot_func_file: TEM-functions.txt
sel_prot_func_file: TEM-functions-selected.txt


#=========================================================#
# Network Analysis 
#=========================================================#
# REQ: Whether to perform clustering nodes into communities
cluster_nodes: no
#---------------------------------------------------------#
# REQ: Whether to calculate node/path/relative path
# centralities
calculate_centralities: yes
#---------------------------------------------------------#
# OPT: List of network path lengths for which centrality 
# will be calculated.
# The path length is the number of connected nodes in path.
# Default is [1] (single node), when left blank and 
# calculate_centralities == True. (Reset to [2] if 
# cent_rank_type == 'relative')
path_len:
- 1
- 2
- 3
#---------------------------------------------------------#
# OPT: For calculating centralities
# Calculate an 'absolute' or 'relative' (ranking) 
# of centralities for paths with length > 1
# default = 'absolute' when left blank or when 
# path_len == 1
cent_rank_type: absolute
#---------------------------------------------------------#
# OPT: Which types of centralities to calculate
# Choice: ['loc','glob','both'] 
# Default is 'loc' (local), when left blank
cent_type: both
