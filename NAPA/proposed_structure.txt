Need:  NAPA (python) package and wiki site with basic documentation for users
Similar to /programs/PyCogent-1.0.1/cogent

Audience:  professional bioinformatics programmers
Input:  collection of sequences
Outputs:  from each module

Major question: How handle multiple external dependencies?
Some dependencies have GPL license: PyCogent, ETEtoolkit

------------
app
  (see PyCogent)
  controllers for third-party applications
     base ApplicationController class

- Clustal and Muscle
    -  Output:   Multiple Sequence alignmnet

- wrap  codeml for PamL
    -  Output: dN/dS value for each position in the MSA

- wrap Partition Finder
    - Output: seed parameter set for MrBayes

-    wrap  MrBayes ?
    - Output:  phylogenetic tree ensemble
        - https://github.com/mdrasmus/compbio (simple wrappers for running MrBayes)
        - http://www.phylo.org/software/python/cipres/index.html (CIPRES Python API)
-    wrap Cytoscape?
    - Output: network visualizations
    - likely, igraph is a dependency and can be used for visualization too


---------
Phylo (phylo/)
Inputs: phylogenetic tree ensemble+MSA (original sequences, on leaves)
Outputs: reconstructed sequences on internal nodes
modules for:

- Ensemble thinning
    - VB code
- Ancestral Reconstruction
    - VB code (dependencies: PyCogent maximum lik ancestral recontruction)
- Function reconstruction
    - VB code (dependencies: R APE package, ACE function)
- Mapping ancestral states (sequence/function) back to internal nodes
    - VB code (dependency ETE)

----------
Network (mutpairs/ and net/)

    Inputs:  MSA or
                 Phylotree ensemble+MSA + ancestral reconstruction (optional: Function reconstruction)

     modules for:

- constructing an undirected network from an MSA
    - VB code (produces tab delimited files: source target weight fields
- constructing a directed network from a phylogeny ensemble+MSA
    - VB code  (dependencies:  python ETE,
- community-finding in a network
    - VB code (dependencies: Igraph)
- network properties: degree distribution of a network
    -  VB code (dependency: igraph)
- shortest path betweenness centrality (options: path length
    - VB code (dependency: igraph)
- random walk betweenness centrality (options: path length, error threshold)
    - VB code (dependency: networkX)


outputs:

-      network
-      analysis results from network
    - network properties
    - node centralities
    - path centralities

-------
Draw
	as separate module or controller?
	pygraphviz, igraph


--------
Stats
    numpy, scipy
